[{"/Users/alanoud/Desktop/sadaia/test-project/src/App.js":"1","/Users/alanoud/Desktop/sadaia/test-project/src/AppRoutes.js":"2","/Users/alanoud/Desktop/sadaia/test-project/src/screens/List/index.js":"3","/Users/alanoud/Desktop/sadaia/test-project/src/screens/Show/index.js":"4","/Users/alanoud/Desktop/sadaia/test-project/src/index.js":"5","/Users/alanoud/Desktop/sadaia/test-project/src/requests/api.js":"6","/Users/alanoud/Desktop/sadaia/test-project/src/reportWebVitals.js":"7","/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/Header/Header.js":"8","/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/Sidebar/Sidebar.js":"9","/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/ErrorText/ErrorText.js":"10","/Users/alanoud/Desktop/sadaia/test-project/src/screens/Show/helpers.js":"11","/Users/alanoud/Desktop/sadaia/test-project/src/screens/Help/index.js":"12","/Users/alanoud/Desktop/sadaia/test-project/src/screens/ErrorPage/index.js":"13","/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/CustomeDropdown/index.js":"14"},{"size":143,"mtime":1612110727532,"results":"15","hashOfConfig":"16"},{"size":666,"mtime":1612107864003,"results":"17","hashOfConfig":"16"},{"size":4210,"mtime":1612121005356,"results":"18","hashOfConfig":"16"},{"size":9147,"mtime":1612097776415,"results":"19","hashOfConfig":"16"},{"size":581,"mtime":1612107837142,"results":"20","hashOfConfig":"16"},{"size":460,"mtime":1612122105458,"results":"21","hashOfConfig":"16"},{"size":362,"mtime":1611928408280,"results":"22","hashOfConfig":"16"},{"size":3705,"mtime":1612120632386,"results":"23","hashOfConfig":"16"},{"size":1986,"mtime":1612110919757,"results":"24","hashOfConfig":"16"},{"size":236,"mtime":1612098233284,"results":"25","hashOfConfig":"16"},{"size":65,"mtime":1612097130449,"results":"26","hashOfConfig":"16"},{"size":634,"mtime":1612101592383,"results":"27","hashOfConfig":"16"},{"size":447,"mtime":1612101182299,"results":"28","hashOfConfig":"16"},{"size":1872,"mtime":1612121794066,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4zd1bf",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"/Users/alanoud/Desktop/sadaia/test-project/src/App.js",[],["67","68"],"/Users/alanoud/Desktop/sadaia/test-project/src/AppRoutes.js",[],["69","70"],"/Users/alanoud/Desktop/sadaia/test-project/src/screens/List/index.js",["71"],"import React, { useEffect, useState, Fragment } from 'react'\nimport classNames from 'classnames'\n\nimport { BsFillBookmarkFill, BsFillGridFill, BsList } from 'react-icons/bs';\nimport { Container } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport Header from '../../shared/components/Header/Header'\nimport CustomDropdown from '../../shared/components/CustomeDropdown'\n\nimport logo from '../../assets/imgs/logo.png'\nimport './list.css';\n\nimport { getJobs } from '../../requests/api'\n\n\nconst List = () => {\n\n    const [jobs, setJobs] = useState([])\n    const [bookmarks, setBookmarks] = useState([])\n    const [grid, setGrid] = useState(false)\n\n    const notify = () => toast('Fetching Error: Try Again', { type: toast.TYPE.ERROR });\n\n    useEffect(() => {\n        getJobs()\n            .then((results) => { setJobs(results) })\n    }, [])\n\n\n    const renderJobs = () => {\n\n        return jobs.map(job => {\n            return (\n                <div className='t-card t-link t-col-4' >\n                    <div className='t-flex-row t-flex-between'>\n                        {job.company_logo ?\n                            <img className='sm t-logo mb-2' width={64} height={64} src={job.company_logo} alt={job.company} />\n                            : <img className='sm bg t-logo mb-2' width={64} height={64} src={logo} alt={job.company} />}\n                        <BsFillBookmarkFill onClick={() => {\n                            if (bookmarks.includes(job.id)) {\n                                setBookmarks(bookmarks => bookmarks.filter(item => item !== job.id))\n                            } else {\n                                setBookmarks(bookmarks => [...bookmarks, job.id])\n                            }\n                        }}\n                            className={classNames('t-icon', {\n                                't-icon--active': bookmarks.includes(job.id)\n                            })} />\n                    </div>\n                    <Link to={`/show/${job.title}`} className='mt-2 t-card-header' >\n                        <h4 className='t-card-title'>{job.title}</h4>\n                    </Link>\n                    <h5 className='mt-2 t-card-subtitle'>{job.location}</h5>\n                    <div className='t-card-tag mb-3'>{job.type}</div>\n                    <p>\n                        {job.company}\n                    </p>\n                    <div className='t-card-footer'>\n                        <small className='text-muted'>{job.created_at}</small>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    return (\n        <Fragment>\n            <Header />\n            <ToastContainer\n                position=\"top-right\"\n                autoClose={5000}\n                hideProgressBar={false}\n                newestOnTop\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n            <div className='t-bg'>\n                <Container>\n                    <div className='t-flex-row t-flex-between pb-1 t-sub-menu'>\n                        <span>{`${jobs.length} jobs found`}</span>\n                        <div className='t-flex-row m-0'>\n                            <span>Sort By: </span>\n                            <CustomDropdown />\n                            <BsFillGridFill className={classNames('ml-2 t-icon', {\n                                't-icon--active': !grid\n                            })}\n                                onClick={() => setGrid(false)} />\n                            <BsList className={classNames('ml-2 t-icon', {\n                                't-icon--active': grid\n                            })}\n                                onClick={() => setGrid(true)} />\n                        </div>\n                    </div>\n                    <div className={classNames('t-flex-row', {\n                        't-flex-column': grid\n                    })}>\n                        {renderJobs()}\n                    </div>\n                </Container>\n            </div>\n        </Fragment>\n    )\n\n}\n\nexport default List","/Users/alanoud/Desktop/sadaia/test-project/src/screens/Show/index.js",[],"/Users/alanoud/Desktop/sadaia/test-project/src/index.js",[],"/Users/alanoud/Desktop/sadaia/test-project/src/requests/api.js",[],"/Users/alanoud/Desktop/sadaia/test-project/src/reportWebVitals.js",[],["72","73"],"/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/Header/Header.js",["74","75"],"/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/Sidebar/Sidebar.js",["76","77"],"import React, { Fragment } from 'react'\nimport './sidebar.css';\nimport logo from \"../../../assets/imgs/logo.png\"\nimport { HiChatAlt2 } from 'react-icons/hi';\nimport { Link } from 'react-router-dom'\n\nconst Sidebar = ({ active }) => {\n    return (\n        <div className='t-sidebar'>\n            <div className='t-flex-row t-flex-column t-flex--start'>\n                <a className='m-6' href=\"/\">\n                    <img className='t-menu-logo' src={logo} />\n                </a>\n                <div className='t-flex-row t-flex-column t-flex--start ml-6'>\n                    <div className='mb-3 t-sidebar-item'><div className={`t-circle${active === 'General Info' ? '-active' : ''}`}>1</div><span className='ml-2'>General Info</span></div>\n                    <div className='mb-3 t-sidebar-item'><div className={`t-circle${active === 'Skills' ? '-active' : ''}`}>2</div><span className='ml-2'>Skills</span></div>\n                    <div className='mb-3 t-sidebar-item'><div className={`t-circle${active === 'Appearance' ? '-active' : ''}`}>3</div><span className='ml-2'>Appearance</span></div>\n                    <div className='mb-3 t-sidebar-item'><div className={`t-circle${active === 'Credits' ? '-active' : ''}`}>4</div><span className='ml-2'>Credits</span></div>\n                    <div className='mb-3 t-sidebar-item'><div className={`t-circle${active === 'Media' ? '-active' : ''}`}>5</div><span className='ml-2'>Media</span></div>\n                </div>\n            </div>\n            <div className='t-sidebar-footer'>\n                <div className='t-flex-row t-flex__nowrap t-flex-between'>\n                    <HiChatAlt2 className='t-icon-lg mt-m1 mr-2' />\n                    <p className='t-sm pl-1'>\n                        if you have any questions while filling the form in, welcome to our <Link className='t-link' to=\"/help\">Help Center</Link>\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar","/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/ErrorText/ErrorText.js",[],["78","79"],"/Users/alanoud/Desktop/sadaia/test-project/src/screens/Show/helpers.js",[],"/Users/alanoud/Desktop/sadaia/test-project/src/screens/Help/index.js",[],["80","81"],"/Users/alanoud/Desktop/sadaia/test-project/src/screens/ErrorPage/index.js",[],["82","83"],"/Users/alanoud/Desktop/sadaia/test-project/src/shared/components/CustomeDropdown/index.js",["84"],"import React, { useState } from 'react'\nimport { Dropdown, FormControl } from \"react-bootstrap\"\nimport { BsChevronDown } from \"react-icons/bs\";\n\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n    <a\n        className='t-sort'\n        href=\"\"\n        ref={ref}\n        onClick={(e) => {\n            e.preventDefault();\n            onClick(e);\n        }}\n    >\n        {children}\n        <BsChevronDown className='ml-2 t-sm' />\n    </a>\n));\n\nconst CustomMenu = React.forwardRef(\n    ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n        const [value, setValue] = useState('');\n\n        return (\n            <div\n                ref={ref}\n                style={style}\n                className={className}\n                aria-labelledby={labeledBy}\n            >\n                <FormControl\n                    autoFocus\n                    className=\"mx-3 my-2 w-auto\"\n                    placeholder=\"Type to filter...\"\n                    onChange={(e) => setValue(e.target.value)}\n                    value={value}\n                />\n                <ul className=\"list-unstyled\">\n                    {React.Children.toArray(children).filter(\n                        (child) =>\n                            !value || child.props.children.toLowerCase().startsWith(value),\n                    )}\n                </ul>\n            </div>\n        );\n    },\n);\n\nconst CustomDropdown = () => {\n\n    return (\n        <Dropdown>\n            <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\n                Relevance\n    </Dropdown.Toggle>\n\n            <Dropdown.Menu as={CustomMenu}>\n                <Dropdown.Item eventKey=\"1\">Relevance</Dropdown.Item>\n                <Dropdown.Item eventKey=\"1\">Type</Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\n\nexport default CustomDropdown",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":24,"column":11,"nodeType":"93","messageId":"94","endLine":24,"endColumn":17},{"ruleId":"85","replacedBy":"95"},{"ruleId":"87","replacedBy":"96"},{"ruleId":"91","severity":1,"message":"97","line":3,"column":85,"nodeType":"93","messageId":"94","endLine":3,"endColumn":89},{"ruleId":"98","severity":1,"message":"99","line":12,"column":40,"nodeType":"100","endLine":12,"endColumn":58},{"ruleId":"91","severity":1,"message":"101","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":12,"column":21,"nodeType":"100","endLine":12,"endColumn":63},{"ruleId":"85","replacedBy":"102"},{"ruleId":"87","replacedBy":"103"},{"ruleId":"85","replacedBy":"104"},{"ruleId":"87","replacedBy":"105"},{"ruleId":"85","replacedBy":"106"},{"ruleId":"87","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":6,"column":5,"nodeType":"100","endLine":14,"endColumn":6},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"no-unused-vars","'notify' is assigned a value but never used.","Identifier","unusedVar",["110"],["111"],"'Form' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.",["110"],["111"],["110"],["111"],["110"],["111"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]